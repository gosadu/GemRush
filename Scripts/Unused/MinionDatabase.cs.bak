/**************************************************************
 * FILE: Assets/Scripts/MinionDatabase.cs
 * PURPOSE: Holds references to all 150 minions.
 **************************************************************/
using UnityEngine;
using System.Collections.Generic;

[CreateAssetMenu(fileName = "MinionDatabase", menuName = "GameData/MinionDatabase")]
public class MinionDatabase : ScriptableObject
{
    [Header("All Minions: 1..150")]
    public List<MinionData> allMinions = new List<MinionData>(); 

    /// <summary>
    /// Returns the minion at 0-based index or safe bounds check.
    /// For convenience, we allow you to pass a 0-based or 1-based index.
    /// </summary>
    public MinionData GetMinion(int index)
    {
        int i = index - 1; // if user passes 1-based
        if (i < 0 || i >= allMinions.Count)
        {
            Debug.LogWarning("[MinionDatabase] Invalid index " + index + ". Returning null.");
            return null;
        }
        return allMinions[i];
    }
}

[System.Serializable]
public class MinionData
{
    public string minionName;
    public int hp;
    public int attack;
    public int difficulty;
    public Sprite minionSprite;
}
