Below is an **in-depth** guide (with **step-by-step** Unity instructions and **practical examples**) on **adaptive UI scaling** for a puzzle-RPG spanning many device aspect ratios—from **older phones** (16:9 or narrower) to **modern tablets** and even **widescreen desktops**. We cover **Canvas Scaler** settings, anchor/pivot recommendations, safe area usage, dynamic layout handling, and specific best practices to keep puzzle and synergy panels consistent across drastically different resolutions.

---

# 1. **Canvas & Canvas Scaler Setup**

1. **Create the Main Canvas**  
   - In the Hierarchy, **right-click** → **UI** → **Canvas**.  
   - Name it `MainCanvas`.  
   - In the Inspector, ensure the **UI Scale Mode** is set to **Scale with Screen Size**.

2. **Canvas Scaler** (on `MainCanvas`)  
   - **Reference Resolution**: Usually a vertical “safe” baseline like **1080×1920** (typical 9:16).  
     - Alternatively, 720×1280 if you want a smaller reference.  
   - **Screen Match Mode**: **Match Width or Height**.  
   - **Match** slider: 
     - If your puzzle is more vertical (like phone portrait), you might set this closer to **1** for height. 
     - If you want to compromise for multi-aspect (tablets vs. phones), keep it at **0.5** so it scales equally in both directions. 
     - Often, `0.5` is a good default for puzzle-based games that must adapt to wide vs. tall.

3. **Canvas Inspector**:
   - **Render Mode**: Screen Space - Overlay or Screen Space - Camera (either is fine, typically Overlay is simpler).  
   - **Plane Distance**: If using Screen Space - Camera, ensure your camera is positioned accordingly.  

By setting `Reference Resolution = 1080×1920, Match=0.5`, your UI will scale halfway between fitting width and height, letting your puzzle remain “centered” while still adapting across aspect ratios.

---

# 2. **Anchors, Pivots, and Safe Areas**

## A) Anchors & Pivots

1. **Core Puzzle Panel**  
   - You likely have a container for your gem board (8×8). 
   - Create an empty **UI** → **Panel** inside `MainCanvas`, named **PuzzlePanel**.  
   - In the **RectTransform** of `PuzzlePanel`, anchor it to the **middle-center** of the screen.  
     - In the **Inspector** → “Anchor Presets” → select the center box (both anchor min and max ~0.5).  
     - Pivot also ~0.5,0.5.  
     - This keeps the puzzle area centered.  
   - For large phones/tablets, the puzzle can remain in the center while side areas expand.

2. **Synergy Panels or Additional UI**  
   - If synergy expansions orchard≥Tier gating or cameo illusions usage hooking has side buttons/panels (like a “Realm Tier Button” or “Cameo Summon” window), anchor them to corners or edges so they remain out of the puzzle’s way.  
   - Example: 
     - A synergy expansions button in top-left. In “Anchor Presets,” pick top-left corner.  
     - Pivot might be (0,1) if you want the pivot at top-left.  
     - This ensures it stays at that corner across aspect changes.

3. **Forging / Additional Panels**  
   - If forging synergy combos or cameo illusions usage hooking windows appear center-screen, also anchor to the center with pivot 0.5,0.5. 
   - If you want them offset from the puzzle, make them siblings of `PuzzlePanel` or children of a separate overlay panel, anchored center but with an X offset.

## B) Safe Area for Notched Phones

1. **SafeArea Script**  
   - Many notched devices (iPhone X, etc.) have a restricted area. 
   - Create a small script `SafeAreaFitter.cs`:

```csharp
using UnityEngine;
using UnityEngine.UI;

[RequireComponent(typeof(RectTransform))]
public class SafeAreaFitter : MonoBehaviour
{
    private RectTransform panel;

    void Awake()
    {
        panel = GetComponent<RectTransform>();
        Refresh();
    }

    void OnRectTransformDimensionsChange()
    {
        Refresh();
    }

    void Refresh()
    {
        Rect safeArea = Screen.safeArea;

        // Convert safeArea into anchor Min/Max
        Vector2 anchorMin = new Vector2(safeArea.xMin / Screen.width, safeArea.yMin / Screen.height);
        Vector2 anchorMax = new Vector2((safeArea.xMin + safeArea.width) / Screen.width,
                                        (safeArea.yMin + safeArea.height) / Screen.height);

        panel.anchorMin = anchorMin;
        panel.anchorMax = anchorMax;
        panel.offsetMin = Vector2.zero;
        panel.offsetMax = Vector2.zero;
    }
}
```

2. **Usage**  
   - Create a panel named `SafeAreaPanel` in `MainCanvas`. 
   - Attach `SafeAreaFitter.cs`. 
   - Place your synergy expansions orchard≥Tier gating buttons, cameo illusions usage hooking icons, forging synergy combos UI under this `SafeAreaPanel`. 
   - This ensures the top bar or bottom bar aren’t blocked by a notch or rounded corner.

3. **Pitfalls**  
   - The puzzle might remain outside the safe area if you want maximum space. Then synergy expansions or cameo illusions usage hooking icons anchor inside the safe area to avoid notches. 
   - If you do want the puzzle to shift for notches, place the puzzle inside the `SafeAreaPanel` as well.

---

# 3. **Example UI Hierarchy**

Below is a possible layout:

```
MainCanvas (Canvas + Canvas Scaler)
 ├── SafeAreaPanel (RectTransform + SafeAreaFitter)
 │    ├── PuzzlePanel (RectTransform)
 │    │    ├── [8×8 gem objects or placeholders]  (Anchors all 0.5, pivot 0.5)
 │    │    └── SynergyOverlay (RectTransform)
 │    │         └── synergy expansions cameo illusions usage hooking effects, or puzzle highlights
 │    ├── RealmTierButton (RectTransform anchored top-left)
 │    ├── CameoSummonButton (RectTransform anchored top-right)
 │    └── ...
 ├── ForgingPanel (RectTransform anchored center, pivot .5,.5, invisible by default)
 │    └── forging combos puzzle UI, synergy combos
 └── AdditionalOverlay (RectTransform anchored center, for cameo illusions usage hooking windows, etc.)
```

**Important**:
- The `SafeAreaPanel` transforms the entire group. 
- **PuzzlePanel** is anchored center with pivot=0.5,0.5 inside that safe area.  
- The synergy expansions orchard≥Tier gating button or cameo illusions usage hooking button is anchored to corners with pivot=top-left or top-right.  
- This ensures consistent relative positioning across aspect changes.

---

# 4. **Handling Rotation (Portrait <-> Landscape)**

1. **Forcing Orientation**  
   - If your puzzle is designed for portrait, you could lock orientation in **Project Settings → Player → Resolution and Presentation**. 
   - If you do allow rotation, then ensure your anchors accommodate wide landscape forms. 
2. **Adaptive Layout**  
   - Use **Layout Groups** for certain synergy expansions orchard≥Tier gating or cameo illusions usage hooking side panels. In landscape, they might appear horizontally, but in portrait, they appear vertically.  
   - If rotation occurs mid-session, the `Canvas Scaler` re-scales the UI. The puzzle remains centered, synergy expansions orchard≥Tier gating icons remain in corners.

3. **Scaling or Cropping**  
   - With `Match=0.5`, wide screens (landscape tablets) might show more side space. If you have a background or orchard≥Tier gating environment, it can fill that space. The puzzle remains a consistent size.  
   - If the puzzle truly must fill horizontally, consider using a script to detect aspect ratio changes and reposition synergy expansions cameo illusions usage hooking or forging synergy combos panels accordingly.

---

# 5. **Auto-Sizing Text, Image Aspect Ratios, & Layout Groups**

1. **Text Auto-Sizing**  
   - For text elements (e.g., synergy expansions orchard≥Tier gating descriptions or cameo illusions usage hooking instructions), enable **TextMeshPro** with **Auto Size**. 
   - Provide min/max font sizes so small screens don’t produce unreadably tiny text or large screens don’t overflow.

2. **Image Aspect Ratio**  
   - For cameo illusions usage hooking swirl or forging synergy combos icons, use **AspectRatioFitter** or set them as **Preserve Aspect** in the Image component.  
   - This ensures the swirl or forging puzzle icons remain correct shape, not squashed on wide tablets.

3. **Layout Groups**  
   - For side panels with multiple synergy expansions orchard≥Tier gating options, cameo illusions usage hooking triggers, or forging synergy combos lists, use **VerticalLayoutGroup** or **HorizontalLayoutGroup**. 
   - Combine with **ContentSizeFitter** or **LayoutElement** to keep consistent spacing.

---

# 6. **Script & Setup: Step-by-Step**

1. **Create MainCanvas**  
   - Add **CanvasScaler** → set to **Scale with Screen Size**.  
   - Reference resolution=**1080×1920**, **Match**=0.5.  
2. **Add SafeAreaPanel**  
   - Attach the `SafeAreaFitter` script from earlier.  
   - Make it fill the entire canvas (RectTransform stretch to all corners).  
3. **Add PuzzlePanel**  
   - Anchors at center, pivot=0.5. Set a fixed dimension in **Reference** resolution. E.g., width=800, height=1000. This ensures the puzzle shape is roughly stable.  
   - Inside `PuzzlePanel`, place your **GemContainers** or tile placeholders. Each gem can be anchored and pivoted center if you do manual placements. Or a **Grid Layout Group** if you prefer an automated approach.  
4. **Add Synergy, Cameo, Forge UI**  
   - If synergy expansions orchard≥Tier gating button is top-left, in the `RectTransform`, pick anchor top-left, pivot (0,1). Position offset ~ (x=30, y=-30).  
   - For cameo illusions usage hooking button top-right, anchor top-right, pivot(1,1).  
   - Forging panel anchored center, pivot(0.5,0.5), initially inactive or hidden.  
5. **Test**  
   - In **Game View**, test aspect ratio changes (e.g. 16:9 → 16:10 → 4:3 → iPhone X safe area).  
   - Watch puzzle center, synergy expansions orchard≥Tier gating corners, cameo illusions usage hooking swirl.  
6. **Handle Rotation**  
   - If you allow rotation, use the same approach. If you want drastically different layout for landscape, you can code a script that toggles a **VerticalLayoutGroup** to a **HorizontalLayoutGroup** on rotation detection.

---

# 7. **Pitfalls & Best Practices**

1. **Don’t Place Puzzle Gems Directly in the Canvas Root**  
   - Always nest them in a `PuzzlePanel` so you can uniformly scale or anchor them.  
2. **Avoid Hardcoding**  
   - Rely on anchors, pivot, or layout groups. Don’t set absolute positions for synergy expansions orchard≥Tier gating or cameo illusions usage hooking icons if you want full adaptivity.  
3. **SafeArea vs. Center**  
   - If you want the puzzle to fully occupy the safe area, place `PuzzlePanel` inside `SafeAreaPanel`. If you prefer ignoring notches, you can keep puzzle anchored to the main canvas and only synergy expansions orchard≥Tier gating or cameo illusions usage hooking icons in the safe area.  
4. **Testing Real Devices**  
   - Emulators or the Editor’s aspect ratio is good, but real notches or cutouts vary. Android devices might differ from iPhones.

---

# 8. **Conclusion**

By carefully **configuring the Canvas Scaler** (reference resolution ~1080×1920, match=0.5), **anchoring puzzle panels** to center, synergy expansions orchard≥Tier gating or cameo illusions usage hooking icons to edges (with safe area awareness), and using **auto layout** or **AspectRatioFitter** for forging synergy combos or cameo illusions swirl, you get a **robust** adaptive UI that:

- Stays centered on small 16:9 phones or older phones.  
- Expands gracefully to tablets or widescreen monitors.  
- Avoids notched or corner cutouts using the SafeArea approach.  
- Maintains consistent puzzle tile sizing, synergy expansions orchard≥Tier gating button placement, cameo illusions usage hooking panel offsets, forging synergy combos layout, etc.

This ensures a polished user experience across all screen conditions, from **portrait** phone gameplay to **landscape** tablet synergy expansions orchard≥Tier gating tasks, cameo illusions usage hooking swirl, forging synergy combos puzzle, etc.

---

## **Example Screenshot (Conceptual)**

*(No actual image can be pasted here, but imagine)*:

- **MainCanvas** in the Scene with a `Canvas Scaler` → `Scale with Screen Size (1080×1920, match=0.5)`.
- Under it, `SafeAreaPanel (SafeAreaFitter)`.
  - **PuzzlePanel** anchored center (Rect= 0.5,0.5 pivot, width=800, height=1000).
    - 8×8 gem grid in the middle.
    - synergy expansions cameo illusions usage hooking swirl overlay on top. 
  - **RealmTierButton** anchored top-left, pivot(0,1).
  - **CameoSummonButton** anchored top-right, pivot(1,1).
  - **ForgingPanel** anchored center, pivot(0.5,0.5) -> hidden by default.  

With that layout, your puzzle board remains stable in the center, synergy expansions orchard≥Tier gating or cameo illusions usage hooking icons remain top corners, and forging synergy combos or cameo illusions usage hooking windows appear center on demand—**scaling** properly across phone or tablet aspects.

---

**END OF ADAPTIVE UI SCALING GUIDE**